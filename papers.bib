%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/

%% Created for abekeisuke at 2018-12-11 12:34:12 +0900 


%% Saved with string encoding Unicode (UTF-8) 



@article{8017634,
	Author = {Y. Wang and Y. Wang and Y. Sun and L. Zhu and K. Lu and C. Fu and M. Sedlmair and O. Deussen and B. Chen},
	Date-Added = {2018-12-11 03:34:11 +0000},
	Date-Modified = {2018-12-11 03:34:11 +0000},
	Doi = {10.1109/TVCG.2017.2745919},
	Issn = {1077-2626},
	Journal = {IEEE Transactions on Visualization and Computer Graphics},
	Keywords = {computational geometry;data visualisation;gradient methods;graph theory;graphics processing units;interactive systems;mathematics computing;optimisation;parallel processing;improved stress majorization method;directional constraints;layout constraints;GPU conjugant gradient solver;interactive constrained graph visualization;cluster separation constraints;unconstrained graph visualizations;constrained graph visualizations;node distances;edge lengths;edge vectors;constraint optimization problem;Stress;Layout;Visualization;Springs;Optimization;Computational modeling;Shape;Graph visualization;stress majorization;constraints},
	Month = {Jan},
	Number = {1},
	Pages = {489-499},
	Title = {Revisiting Stress Majorization as a Unified Framework for Interactive Constrained Graph Visualization},
	Volume = {24},
	Year = {2018},
	Bdsk-Url-1 = {https://doi.org/10.1109/TVCG.2017.2745919}}

@article{doi:10.1111/cgf.13185,
	Abstract = {Abstract The visualization of dynamic graphs demands visually encoding at least three major data dimensions: vertices, edges, and time steps. Many of the state-of-the-art techniques can show an overview of vertices and edges but lack a data-scalable visual representation of the time aspect. In this paper, we address the problem of displaying dynamic graphs with a thousand or more time steps. Our proposed interleaved parallel edge splatting technique uses a time-to-space mapping and shows the complete dynamic graph in a static visualization. It provides an overview of all data dimensions, allowing for visually detecting time-varying data patterns; hence, it serves as a starting point for further data exploration. By applying clustering and ordering techniques on the vertices, edge splatting on the links, and a dense time-to-space mapping, our approach becomes visually scalable in all three dynamic graph data dimensions. We illustrate the usefulness of our technique by applying it to call graphs and US domestic flight data with several hundred vertices, several thousand edges, and more than a thousand time steps.},
	Author = {Burch, M. and Hlawatsch, M. and Weiskopf, D.},
	Date-Added = {2018-12-10 08:47:59 +0000},
	Date-Modified = {2018-12-10 08:47:59 +0000},
	Doi = {10.1111/cgf.13185},
	Eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1111/cgf.13185},
	Journal = {Computer Graphics Forum},
	Keywords = {Categories and Subject Descriptors (according to ACM CCS), Data Structures E.1: Graphs and Networks---},
	Number = {3},
	Pages = {261-271},
	Title = {Visualizing a Sequence of a Thousand Graphs (or Even More)},
	Url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.13185},
	Volume = {36},
	Bdsk-Url-1 = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cgf.13185},
	Bdsk-Url-2 = {https://doi.org/10.1111/cgf.13185}}
